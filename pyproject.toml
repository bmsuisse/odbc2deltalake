[tool.poetry]
name = "odbc2deltalake"
version = "0.11.4"
description = ""
authors = ["Adrian Ehrsam <adrian.ehrsam@bmsuisse.ch>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
pydantic = ">=1.10.0"
pyodbc = { version = "^5.1.0", optional = true }
deltalake2db = { version = ">=0.3.3", optional = true }
arrow-odbc = { version = "^5.0.0", optional = true }
deltalake = { version = ">=0.16.1", optional = true }
duckdb = { version = ">=0.10.1", optional = true }
azure-identity = { version = "^1.15.0", optional = true }
adlfs = { version = "^2024.2.0", optional = true }
sqlglot = ">=23.0.5"


[tool.poetry.group.dev.dependencies]
pyright = "^1.1.352"
ruff = "^0.4.3"


[tool.poetry.group.test.dependencies]
pytest = "^8.0.2"
pytest-asyncio = "^0.23.5"
pytest-order = "^1.2.0"
pytest-cov = "^4.1.0"
docker = "^7.0.0"
python-dotenv = "^1.0.1"
azure-storage-blob = "^12.19.1"
pandas = ">=1.4.2"
pyspark = "^3.5.1"
delta-spark = "^3.1.0"


[tool.poetry.group.spark.dependencies]
delta-spark = "^3.1.0"

[tool.poetry.extras]
local = ["pyodbc", "deltalake2db", "arrow-odbc", "deltalake", "duckdb"]
local_azure = ["azure-identity", "adlfs", "azure-storage-file-datalake"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pyright]
venv = ".venv"
venvPath = "."
pythonVersion = "3.9"
typeCheckingMode = "basic"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "if __name__ == .__main__.:",
    "@(abc.)?abstractmethod",
    "raise AssertionError",
    "raise NotImplementedError",
]
